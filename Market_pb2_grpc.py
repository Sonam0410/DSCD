# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Market_pb2 as Market__pb2


class MarketStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterSeller = channel.unary_unary(
                '/market.Market/RegisterSeller',
                request_serializer=Market__pb2.RegisterSellerRequest.SerializeToString,
                response_deserializer=Market__pb2.RegisterSellerResponse.FromString,
                )
        self.AddProduct = channel.unary_unary(
                '/market.Market/AddProduct',
                request_serializer=Market__pb2.AddProductRequest.SerializeToString,
                response_deserializer=Market__pb2.AddProductResponse.FromString,
                )
        self.UpdateProduct = channel.unary_unary(
                '/market.Market/UpdateProduct',
                request_serializer=Market__pb2.UpdateProductRequest.SerializeToString,
                response_deserializer=Market__pb2.UpdateProductResponse.FromString,
                )
        self.DeleteProduct = channel.unary_unary(
                '/market.Market/DeleteProduct',
                request_serializer=Market__pb2.DeleteProductRequest.SerializeToString,
                response_deserializer=Market__pb2.DeleteProductResponse.FromString,
                )
        self.SearchProducts = channel.unary_unary(
                '/market.Market/SearchProducts',
                request_serializer=Market__pb2.SearchProductsRequest.SerializeToString,
                response_deserializer=Market__pb2.SearchProductsResponse.FromString,
                )
        self.PurchaseProduct = channel.unary_unary(
                '/market.Market/PurchaseProduct',
                request_serializer=Market__pb2.PurchaseProductRequest.SerializeToString,
                response_deserializer=Market__pb2.PurchaseProductResponse.FromString,
                )
        self.WishlistProduct = channel.unary_unary(
                '/market.Market/WishlistProduct',
                request_serializer=Market__pb2.WishlistProductRequest.SerializeToString,
                response_deserializer=Market__pb2.WishlistProductResponse.FromString,
                )


class MarketServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurchaseProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WishlistProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSeller,
                    request_deserializer=Market__pb2.RegisterSellerRequest.FromString,
                    response_serializer=Market__pb2.RegisterSellerResponse.SerializeToString,
            ),
            'AddProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProduct,
                    request_deserializer=Market__pb2.AddProductRequest.FromString,
                    response_serializer=Market__pb2.AddProductResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=Market__pb2.UpdateProductRequest.FromString,
                    response_serializer=Market__pb2.UpdateProductResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=Market__pb2.DeleteProductRequest.FromString,
                    response_serializer=Market__pb2.DeleteProductResponse.SerializeToString,
            ),
            'SearchProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchProducts,
                    request_deserializer=Market__pb2.SearchProductsRequest.FromString,
                    response_serializer=Market__pb2.SearchProductsResponse.SerializeToString,
            ),
            'PurchaseProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.PurchaseProduct,
                    request_deserializer=Market__pb2.PurchaseProductRequest.FromString,
                    response_serializer=Market__pb2.PurchaseProductResponse.SerializeToString,
            ),
            'WishlistProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.WishlistProduct,
                    request_deserializer=Market__pb2.WishlistProductRequest.FromString,
                    response_serializer=Market__pb2.WishlistProductResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'market.Market', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Market(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/RegisterSeller',
            Market__pb2.RegisterSellerRequest.SerializeToString,
            Market__pb2.RegisterSellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/AddProduct',
            Market__pb2.AddProductRequest.SerializeToString,
            Market__pb2.AddProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/UpdateProduct',
            Market__pb2.UpdateProductRequest.SerializeToString,
            Market__pb2.UpdateProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/DeleteProduct',
            Market__pb2.DeleteProductRequest.SerializeToString,
            Market__pb2.DeleteProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/SearchProducts',
            Market__pb2.SearchProductsRequest.SerializeToString,
            Market__pb2.SearchProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PurchaseProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/PurchaseProduct',
            Market__pb2.PurchaseProductRequest.SerializeToString,
            Market__pb2.PurchaseProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WishlistProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/market.Market/WishlistProduct',
            Market__pb2.WishlistProductRequest.SerializeToString,
            Market__pb2.WishlistProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
